// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.5/esri/copyright.txt for details.
//>>built
define("require exports ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/accessorSupport/decorators dojo/_base/lang ../core/Collection ../core/promiseUtils ../Graphic ../geometry/SpatialReference ../geometry/Extent ../geometry/support/graphicsUtils ./Layer ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./support/kmlUtils ./support/KMLSublayer".split(" "),function(A,B,m,e,d,n,f,p,q,r,t,g,u,v,w,x,y,h,z){var k=f.ofType(q);
return function(l){function b(a,b){var c=l.call(this)||this;c._visibleFolders=[];c.allVisiblePoints=new k;c.allVisiblePolylines=new k;c.allVisiblePolygons=new k;c.allVisibleMapImages=new f;c.outSpatialReference=r.WGS84;c.operationalLayerType="KML";c.sublayers=null;c.type="kml";c.url=null;c.watch("sublayers",function(a,b){b&&b.forEach(function(c){c.parent=null;c.layer=null});a&&a.forEach(function(a){a.parent=c;a.layer=c})},!0);c.watch("visibleSublayers",function(a){c.allVisiblePoints.removeAll();c.allVisiblePolylines.removeAll();
c.allVisiblePolygons.removeAll();c.allVisibleMapImages.removeAll();a&&a.forEach(function(a){c.allVisiblePoints.addMany(a.points);c.allVisiblePolylines.addMany(a.polylines);c.allVisiblePolygons.addMany(a.polygons);c.allVisibleMapImages.addMany(a.mapImages)})});return c}m(b,l);b.prototype.normalizeCtorArgs=function(a,b){return"string"===typeof a?n.mixin({},{url:a},b):a};Object.defineProperty(b.prototype,"fullExtent",{get:function(){var a=this.allVisibleMapImages.reduce(function(a,c){return a?a.union(c.extent):
c.extent},null);return[g.graphicsExtent(this.allVisiblePoints),g.graphicsExtent(this.allVisiblePolylines),g.graphicsExtent(this.allVisiblePolygons),a].reduce(function(a,c){return a?c?a.union(c):a:c},null)},enumerable:!0,configurable:!0});b.prototype.readSublayersFromItemOrWebMap=function(a,b,c){this._visibleFolders=b.visibleFolders};b.prototype.readSublayers=function(a,b,c){return h.sublayersFromJSON(b,c,this._visibleFolders)};b.prototype.writeSublayers=function(a,b,c,d){c=[];for(a=a.toArray();a.length;)d=
a[0],d.networkLink||(d.visible&&c.push(d.id),d.sublayers&&a.push.apply(a,d.sublayers.toArray())),a.shift();b.visibleFolders=c};Object.defineProperty(b.prototype,"title",{get:function(){if(this._get("title")&&"defaults"!==this.originOf("title"))return this._get("title");if(this.url){var a=this.url.substring(this.url.lastIndexOf("/")+1,this.parsedUrl.path.lastIndexOf("."));0===a.length&&(a="KML");return a}return this._get("title")||""},set:function(a){this._set("title",a)},enumerable:!0,configurable:!0});
Object.defineProperty(b.prototype,"visibleSublayers",{get:function(){var a=this.sublayers,b=[],c=function(a){a.visible&&(b.push(a),a.sublayers&&a.sublayers.forEach(c))};a&&a.forEach(c);return b},enumerable:!0,configurable:!0});b.prototype.load=function(){var a=this;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"]}).then(function(){return a._fetchService()}));return this};b.prototype._fetchService=function(){var a=this;return p.resolve().then(function(){return a.resourceInfo?{ssl:!1,
data:a.resourceInfo}:h.fetchService(a.url,a.outSpatialReference,a.refreshInterval)}).then(function(b){(b=h.parseKML(b.data))&&a.read(b,{origin:"service"})})};e([d.shared({"2d":"../views/2d/layers/KMLLayerView2D"})],b.prototype,"viewModulePaths",void 0);e([d.property({readOnly:!0})],b.prototype,"allVisiblePoints",void 0);e([d.property({readOnly:!0})],b.prototype,"allVisiblePolylines",void 0);e([d.property({readOnly:!0})],b.prototype,"allVisiblePolygons",void 0);e([d.property({readOnly:!0})],b.prototype,
"allVisibleMapImages",void 0);e([d.property({dependsOn:["visibleSublayers"],type:t,readOnly:!0})],b.prototype,"fullExtent",null);e([d.property()],b.prototype,"outSpatialReference",void 0);e([d.property()],b.prototype,"operationalLayerType",void 0);e([d.property({type:f.ofType(z),json:{write:{ignoreOrigin:!0}}})],b.prototype,"sublayers",void 0);e([d.reader(["web-map","portal-item"],"sublayers",["visibleFolders"])],b.prototype,"readSublayersFromItemOrWebMap",null);e([d.reader("service","sublayers",
["sublayers"])],b.prototype,"readSublayers",null);e([d.writer("sublayers")],b.prototype,"writeSublayers",null);e([d.property({readOnly:!0,json:{read:!1}})],b.prototype,"type",void 0);e([d.property({json:{origins:{webMap:{read:{source:"title"}}},write:{ignoreOrigin:!0}},dependsOn:["url","parsedUrl"]})],b.prototype,"title",null);e([d.property()],b.prototype,"url",void 0);e([d.property({readOnly:!0,dependsOn:["sublayers"]})],b.prototype,"visibleSublayers",null);return b=e([d.subclass("esri.layers.KMLLayer")],
b)}(d.declared(u,v,w,x,y))});