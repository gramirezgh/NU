// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.5/esri/copyright.txt for details.
//>>built
define("../core/declare ../core/lang ../core/kebabDictionary ../core/Error dojo/_base/array dojo/_base/lang ../support/arcadeUtils ../symbols/support/jsonUtils ../symbols/support/typeUtils ./Renderer".split(" "),function(q,e,k,r,t,l,g,f,h,u){var m=k({esriNormalizeByLog:"log",esriNormalizeByPercentOfTotal:"percent-of-total",esriNormalizeByField:"field"}),n=k({esriClassifyNaturalBreaks:"natural-breaks",esriClassifyEqualInterval:"equal-interval",esriClassifyQuantile:"quantile",esriClassifyStandardDeviation:"standard-deviation",
esriClassifyGeometricalInterval:"geometrical-interval"}),p=q(u,{declaredClass:"esri.renderers.ClassBreaksRenderer",properties:{backgroundFillSymbol:{value:null,json:{read:f.read,write:function(a,b,d,c){if(a=f.write(a,{},c))b.backgroundFillSymbol=a}}},classBreakInfos:{set:function(a){a=a?a.slice(0):[];a.forEach(function(a){a.symbol=h.ensureType(a.symbol)});this._set("classBreakInfos",a)},json:{read:{source:["classBreakInfos","minValue"],reader:function(a,b,d){var c=b.minValue;if(a&&Array.isArray(a)){var v=
a[0]&&null!=a[0].classMaxValue;return a.map(function(a){a=e.clone(a);if(v){var g=a.classMaxValue;a.minValue=c;c=a.maxValue=g}a.symbol=f.read(a.symbol,b,d);return a})}return a}},write:function(a,b,d,c){a=this.classBreakInfos||[];d=a[0]&&a[0].minValue;b.minValue=-Infinity===d?-Number.MAX_VALUE:d;b.classBreakInfos=t.map(a,function(a){a=e.clone(a);a.symbol&&(a.symbol=f.write(a.symbol,{},c));a.classMaxValue=Infinity===a.maxValue?Number.MAX_VALUE:a.maxValue;delete a.minValue;delete a.maxValue;return e.fixJson(a)})}}},
classificationMethod:{value:null,json:{read:n.fromJSON,write:function(a,b){if(a=n.toJSON(a))b.classificationMethod=a}}},defaultLabel:{value:null,json:{write:!0}},defaultSymbol:{types:h.types,value:null,json:{read:f.read,write:function(a,b,d,c){if(a=f.write(a,{},c))b.defaultSymbol=a}}},valueExpression:{value:null,json:{write:!0}},valueExpressionTitle:{value:null,json:{write:!0}},compiledFunc:{dependsOn:["valueExpression"],get:function(){return g.createFunction(this.valueExpression)}},legendOptions:{value:null,
json:{read:function(a){return e.clone(a)},write:function(a,b,d,c){c&&"web-scene"===c.origin?a&&c.messages&&c.messages.push(new r("property:unsupported",this.declaredClass+".legendOptions is not supported in Web Scene. Please remove this property to save the Web Scene.",{instance:this,propertyName:"legendOptions",context:c})):b.legendOptions=e.clone(a)}}},field:{value:null,json:{write:!0}},isMaxInclusive:!0,normalizationField:{value:null,json:{write:!0}},normalizationTotal:{value:null,json:{write:!0}},
normalizationType:{value:null,dependsOn:["normalizationField","normalizationTotal"],get:function(){var a=this._get("normalizationType"),b=!!this.normalizationField,d=null!=this.normalizationTotal;if(b||d)a=b&&"field"||d&&"percent-of-total",b&&d&&console.warn("warning: both normalizationField and normalizationTotal are set!");else if("field"===a||"percent-of-total"===a)a=null;return a},json:{read:m.fromJSON,write:function(a,b){if(a=m.toJSON(a))b.normalizationType=a}}},requiredFields:{dependsOn:["field",
"normalizationField","valueExpression"]},type:{value:"class-breaks",json:{write:function(a,b){b.type="classBreaks"}}}},constructor:function(){this.classBreakInfos=[]},addClassBreakInfo:function(a,b,d){a=l.isObject(a)?e.clone(a):{minValue:a,maxValue:b,symbol:d};a.symbol=h.ensureType(a.symbol);this.classBreakInfos.push(a)},removeClassBreakInfo:function(a,b){var d,c,e=this.classBreakInfos.length;for(c=0;c<e;c++)if(d=[this.classBreakInfos[c].minValue,this.classBreakInfos[c].maxValue],d[0]==a&&d[1]==b){this.classBreakInfos.splice(c,
1);break}},getBreakIndex:function(a,b){var d=this.field,c=a.attributes,e=this.classBreakInfos.length,f=this.isMaxInclusive;if(this.valueExpression)a=g.executeFunction(this.compiledFunc,g.createExecContext(a,g.getViewInfo(b)));else if(l.isFunction(d))a=d(a);else if(a=parseFloat(c[d]),b=this.normalizationType)if(d=parseFloat(this.normalizationTotal),c=parseFloat(c[this.normalizationField]),"log"===b)a=Math.log(a)*Math.LOG10E;else if("percent-of-total"===b&&!isNaN(d))a=a/d*100;else if("field"===b&&!isNaN(c)){if(isNaN(a)||
isNaN(c))return-1;a/=c}if(null!=a&&!isNaN(a)&&"number"===typeof a)for(c=0;c<e;c++)if(b=[this.classBreakInfos[c].minValue,this.classBreakInfos[c].maxValue],b[0]<=a&&(f?a<=b[1]:a<b[1]))return c;return-1},getClassBreakInfo:function(a,b){a=this.getBreakIndex(a,b);return-1!==a?this.classBreakInfos[a]:null},getSymbol:function(a,b){a=this.getBreakIndex(a,b);return-1<a?this.classBreakInfos[a].symbol:this.defaultSymbol},getSymbols:function(){var a=[];this.classBreakInfos.forEach(function(b){b.symbol&&a.push(b.symbol)});
this.defaultSymbol&&a.push(this.defaultSymbol);return a},clone:function(){return new p({field:this.field,backgroundFillSymbol:this.backgroundFillSymbol&&this.backgroundFillSymbol.clone(),classificationMethod:this.classificationMethod,defaultLabel:this.defaultLabel,defaultSymbol:this.defaultSymbol&&this.defaultSymbol.clone(),valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle,classBreakInfos:e.clone(this.classBreakInfos),isMaxInclusive:this.isMaxInclusive,normalizationField:this.normalizationField,
normalizationTotal:this.normalizationTotal,normalizationType:this.normalizationType,visualVariables:e.clone(this.visualVariables),legendOptions:e.clone(this.legendOptions),authoringInfo:e.clone(this.authoringInfo)})},collectRequiredFields:function(a){this.inherited(arguments);[this.field,this.normalizationField].forEach(function(b){b&&(a[b]=!0)});this.valueExpression&&g.extractFieldNames(this.valueExpression).forEach(function(b){a[b]=!0})}});return p});