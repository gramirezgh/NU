// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.5/esri/copyright.txt for details.
//>>built
define("require exports dojo/i18n!../../nls/smartMapping dojo/_base/lang ../../../core/lang ../statistics/summaryStatistics ../symbology/color ../../../core/numberUtils ../../support/utils ../../ClassBreaksRenderer ../../../core/promiseUtils ../../../views/SceneView ../../PointCloudRGBRenderer ../../PointCloudStretchRenderer ./support/utils ../support/utils".split(" "),function(J,g,y,m,z,r,n,A,q,B,e,t,C,D,d,f){function E(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return e.reject(d.createError("color-visual-variable:missing-parameters",
"'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var b=m.mixin({},a);a=[0,1];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=c.geometryType;if("mesh"!==a&&b.worldScale){if("polyline"===a||"polygon"===a)return e.reject(d.createError("color-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers"));if(!(b.view instanceof t))return e.reject(d.createError("color-visual-variable:invalid-parameters",
"'view' parameter should be an instance of SceneView when 'worldScale' parameter is true"))}a=f.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=d.verifyBasicFieldValidity(c,a,"color-visual-variable:invalid-parameters"))?e.reject(a):b}):e.reject(d.createError("color-visual-variable:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function F(a){if(!(a&&a.layer&&(a.field||a.valueExpression||
a.sqlExpression)))return e.reject(d.createError("color-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var b=m.mixin({},a);b.symbolType=b.symbolType||"2d";a=[0,1];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=c.geometryType,p=-1<b.symbolType.indexOf("3d");if("mesh"===a)b.symbolType="3d-volumetric",b.colorMixMode=b.colorMixMode||"replace";else{if(p&&("polyline"===a||"polygon"===a))return e.reject(d.createError("color-continuous-renderer:not-supported",
"3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&!(b.view instanceof t))return e.reject(d.createError("color-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}a=f.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=d.verifyBasicFieldValidity(c,a,"color-continuous-renderer:invalid-parameters"))?
e.reject(a):b}):e.reject(d.createError("color-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function G(a){if(!a||!a.layer)return e.reject(d.createError("color-point-cloud-true-color-renderer:missing-parameters","'layer' parameter is required"));var b=m.mixin({},a);a=[2];var c=f.createLayerAdapter(b.layer,a);b.layer=c;b.density=b.density||25;b.size=b.size||"100%";return d.isValidPointSize(b.size)?c?c.load().then(function(){return b}):
e.reject(d.createError("color-point-cloud-true-color-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", "))):e.reject(d.createError("color-point-cloud-true-color-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"))}function H(a){if(!(a&&a.layer&&a.field))return e.reject(d.createError("color-point-cloud-continuous-renderer:missing-parameters","'layer' and 'field' parameters are required"));var b=a.field.toLowerCase();
if("intensity"!==b&&"elevation"!==b)return e.reject(d.createError("color-point-cloud-continuous-renderer:invalid-parameters","'field' should be either 'intensity' or 'elevation'"));var c=m.mixin({},a);a=[2];b=f.createLayerAdapter(c.layer,a);c.layer=b;c.density=c.density||25;c.size=c.size||"100%";return d.isValidPointSize(c.size)?b?b.load().then(function(){return c}):e.reject(d.createError("color-point-cloud-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", "))):
e.reject(d.createError("color-point-cloud-continuous-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"))}function I(a){a=m.mixin({},a);var b=-1<a.symbolType.indexOf("3d-volumetric");delete a.symbolType;delete a.defaultSymbolEnabled;delete a.colorMixMode;a.worldScale=b;return a}function u(a,b){var c=a.colorScheme,d=a.basemap;if(c)c=n.cloneScheme(c);else{b=b||a.theme||"high-to-low";var e=n.getSchemes({theme:b,basemap:a.basemap,geometryType:a.geometryType,
worldScale:a.worldScale,view:a.view});e&&(d=e.basemapId,c=a.schemeId?n.getSchemeById({id:b+"/"+d+"/"+a.schemeId,geometryType:a.geometryType}):e.primaryScheme)}return{scheme:c,basemapId:d}}function v(a,b,c){for(var d=(b-a)/(c-1),e=[a],h=1;h<=c-2;h++)e.push(a+h*d);e.push(b);return A.round(e,{strictBounds:!0})}function w(a){return E(a).then(function(b){var a=b.normalizationField,f=a?"field":void 0;return(b.statistics?e.resolve(b.statistics):r({layer:b.layer,field:b.field,valueExpression:b.valueExpression,
sqlExpression:b.sqlExpression,sqlWhere:b.sqlWhere,normalizationType:f,normalizationField:a,minValue:b.minValue,maxValue:b.maxValue})).then(function(c){var h=b.layer,k=b.field,f=k&&"function"!==typeof k?h.getField(k):null,f=f&&"date"===f.type,h=u({basemap:b.basemap,theme:b.theme,geometryType:h.geometryType,colorScheme:b.colorScheme,worldScale:b.worldScale,view:b.view}),l=h.scheme;if(l){var p=d.createColors(l.colors,5);if(5>p.length)c=e.reject(d.createError("color-visual-variable:insufficient-info",
"Color scheme does not have enough colors"));else{var g=d.getDefaultDataRange(c,f,!0),m=-1<l.id.indexOf("seq-"),m=g?v(g[0],g[1],5):d.createStopValues(c,m),p=d.createColors(p,5),k={type:"color",field:k,valueExpression:b.valueExpression,normalizationField:a,stops:q.createColorStops({values:m,isDate:f,dateFormatOptions:f?q.timelineDateFormatOptions:null,colors:p,labelIndexes:[0,2,4]}),legendOptions:b.legendOptions};c=e.resolve({basemapId:h.basemapId,visualVariable:k,statistics:c,defaultValuesUsed:!!g,
colorScheme:n.cloneScheme(l),authoringInfo:{visualVariables:[{type:"color",minSliderValue:c.min,maxSliderValue:c.max,theme:l.theme}]}})}}else c=e.reject(d.createError("color-visual-variable:insufficient-info","Unable to find color scheme"));return c})})}Object.defineProperty(g,"__esModule",{value:!0});var x=Math.pow(2,53)-1;g.createVisualVariable=w;g.createContinuousRenderer=function(a){return F(a).then(function(b){return w(I(b)).then(function(a){var c=b.normalizationField,e=c?"field":void 0,f=b.field,
k=b.layer.geometryType,g=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled,l=n.cloneScheme(a.colorScheme);return{renderer:new B({classBreakInfos:[{minValue:-x,maxValue:x,symbol:d.createSymbol(l,l.noDataColor,k,b.symbolType,b.colorMixMode)}],defaultLabel:g?y.other:null,defaultSymbol:g?d.createSymbol(l,l.noDataColor,k,b.symbolType,b.colorMixMode):null,field:f,normalizationType:e,normalizationField:c,valueExpression:b.valueExpression,visualVariables:[q.cloneColorVariable(a.visualVariable)],authoringInfo:z.clone(a.authoringInfo)}),
visualVariable:q.cloneColorVariable(a.visualVariable),statistics:a.statistics,defaultValuesUsed:a.defaultValuesUsed,colorScheme:n.cloneScheme(a.colorScheme),basemapId:a.basemapId}})})};g.createPCTrueColorRenderer=function(a){return G(a).then(function(a){return{renderer:new C({field:"RGB",pointsPerInch:a.density,pointSizeAlgorithm:d.getPointSizeAlgorithm(a.size)})}})};g.createPCContinuousRenderer=function(a){return H(a).then(function(a){return(a.statistics?e.resolve(a.statistics):r({layer:a.layer,
field:a.field})).then(function(b){var c=u({basemap:a.basemap,colorScheme:a.colorScheme,geometryType:a.layer.geometryType,schemeId:"elevation"===a.field.toLowerCase()?"point-cloud-elevation-scheme":"point-cloud-intensity-scheme"}),f=c.scheme;if(f){var h=d.createColors(f.colors,5);if(5>h.length)b=e.reject(d.createError("color-point-cloud-continuous-renderer:insufficient-info","Color scheme does not have enough colors"));else{var k=d.getDefaultDataRange(b,!1,!0),g=k?v(k[0],k[1],5):d.createStopValues(b),
h=q.createColorStops({values:g,isDate:!1,dateFormatOptions:null,colors:h,labelIndexes:[0,2,4]});b=e.resolve({stops:h,basemapId:c.basemapId,statistics:b,defaultValuesUsed:!!k,colorScheme:n.cloneScheme(f)})}}else b=e.reject(d.createError("color-point-cloud-continuous-renderer:insufficient-info","Unable to find color scheme"));return b}).then(function(b){return{renderer:new D({field:a.field,pointsPerInch:a.density,pointSizeAlgorithm:d.getPointSizeAlgorithm(a.size),stops:b.stops}),basemapId:b.basemapId,
statistics:b.statistics,defaultValuesUsed:b.defaultValuesUsed,colorScheme:b.colorScheme}})})}});