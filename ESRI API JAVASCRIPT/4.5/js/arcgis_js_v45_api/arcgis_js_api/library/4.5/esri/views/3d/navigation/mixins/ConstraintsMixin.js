// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.5/esri/copyright.txt for details.
//>>built
define("../../../../core/Accessor ../../../../core/watchUtils ../../../../geometry/Point ../../support/mathUtils ../../lib/glMatrix ../../constraints/SceneViewAltitudeConstraint ../../webgl-engine/lib/Camera ../../webgl-engine/lib/IntervalUtilities ../../webgl-engine/lib/Selector".split(" "),function(x,m,y,n,t,u,z,v,A){function B(a){return new f.Tilt({min:function(){return.01},max:function(){return n.deg2rad(a.tilt.max)}})}function C(a){return new f.Altitude({min:function(){return a.altitude.min},
max:function(){return a.altitude.max}})}var g=t.vec3d,l=t.mat4d,D=new y,h=g.create(),p=l.create(),q=g.create(),r=g.create(),w=new z,k=g.create(),E={tilt:0,distance:0},F={distance:0,maxFarNearRatio:0},f=x.createSubclass([],{declaredClass:"esri.views.3d.navigation.mixins.ConstraintsMixin",properties:{userConstraints:{set:function(a){this._disconnectUserConstraints();this._connectUserConstraints(a);this._set("userConstraints",a)}},elevationProvider:{value:null,set:function(a){null!==this._elevationChangeHandle&&
(this._elevationChangeHandle.remove(),this._elevationChangeHandle=null);null!==this._elevationChangeTileHandle&&(this._elevationChangeTileHandle.remove(),this._elevationChangeTileHandle=null);null!==a&&(this._elevationChangeHandle=a.on("elevation-change",this._elevationChangeHandler.bind(this)),this._elevationChangeTileHandle=a.on("tile-geometry-change",this._elevationChangeTileHandler.bind(this)));this._set("elevationProvider",a)}},minPoiDist:{get:function(){return this._minPoiDistInMeters/this.renderUnitInMeters},
dependsOn:["renderUnitInMeters"]},cameraElevationMargin:{get:function(){return this._cameraElevationMarginInMeters/this.renderUnitInMeters},dependsOn:["renderUnitInMeters"]},minNearDistance:{get:function(){return this._minNearDistanceInMeters/this.renderUnitInMeters},dependsOn:["renderUnitInMeters"]},renderUnitInMeters:{},constraintsEnabled:{value:!0}},constructor:function(a){this._userConstraints=null;this._userConstraintsHandles=[];this._clipDistanceHandles=[];this._tiltHandles=[];this._altitudeHandles=
[];this.constraints={tilt:this.defaultConstraints.tilt,altitude:this.defaultConstraints.altitude,collision:this.defaultConstraints.collision};this._tiltModeHandler=this._tiltModeHandler.bind(this);this._tiltMaxHandler=this._tiltMaxHandler.bind(this);this._altitudeModeHandler=this._altitudeModeHandler.bind(this);this._altitudeMinMaxHandler=this._altitudeMinMaxHandler.bind(this);this._clipDistanceModeHandler=this._clipDistanceModeHandler.bind(this);this._clipDistanceNearFarHandler=this._clipDistanceNearFarHandler.bind(this);
this._collisionEnabledHandler=this._collisionEnabledHandler.bind(this);this.enableElevationUpdates=!0;this.updateTargetByElevationUpdates=f.UPDATE_TARGET_BY_ELEVATION_UPDATES_DEFAULT;this._recomputeTargetEyeForElevationChange=this._recomputeTargetCenterForElevationChange=!1;this._elevationChangeTileHandle=this._elevationChangeHandle=null;this._autoAltitudeConstraints={min:u.MIN_DEFAULT,max:u.MAX_DEFAULT};this.maxFarNearRatio=2E4;this._minNearDistanceInMeters=2;this._minPoiDistInMeters=4;this._cameraElevationMarginInMeters=
5;this._intersectTerrainSelector=new A(a.view.viewingMode);this._intersectTerrainSelector.enableInvisibleTerrain=!0},initialize:function(){this._targetCameraBeforeElevationUpdate=this.cameras.current.copy();this._targetCameraChangedByElevationUpdate=!1;this._sceneExtentChangeHandle=this.view.watch("dataExtent",function(a){this._dataExtentChanged()}.bind(this))},_dataExtentChanged:function(){this.view.ready&&0<this.view.dataExtent.xmax-this.view.dataExtent.xmin&&(this._updateSurfaceDistanceConstraint(this.view.dataExtent),
this._reapplyConstraints(),this._camerasChanged())},_updateSurfaceDistanceConstraint:function(a){},updateRenderCoordsHelper:function(a,b){this.inherited(arguments);this._userConstraints&&"auto"!==this._userConstraints.altitude.mode||(this.constraints.altitude=f.Altitude.scale(this.defaultConstraints.altitude,a.unitInMeters));this._userConstraints&&"auto"!==this._userConstraints.tilt.mode||(this.constraints.tilt=f.Tilt.scale(this.defaultConstraints.tilt,a.unitInMeters));this._updateSurfaceDistanceConstraint(this.view.dataExtent);
this._reapplyConstraints();this._camerasChanged()},destroy:function(){this._disconnectUserConstraints();this._sceneExtentChangeHandle.remove()},_updateTargetCenterForElevation:function(a){this._recomputeTargetCenterForElevationChange=!1;if(a||this.enableElevationUpdates&&this.updateTargetByElevationUpdates)if(this._targetCameraChangedByElevationUpdate?a=this._targetCameraBeforeElevationUpdate:(a=this.cameras.target,this._targetCameraBeforeElevationUpdate.copyFrom(a)),(a=this.getCameraIntersectTerrain(a.eye,
a.center,a.up,.02))&&!a.equals(this.cameras.target))return this.setCamera(a,{internalUpdate:!0}),this._targetCameraChangedByElevationUpdate=!0;return!1},_updateTargetCenterForElevationWhenIdle:function(){var a=this.isAnimating,b=!1;if(!(this.pan&&this.pan.continuous&&this.pan.continuous.active||this.pan.active||this.zoom.active||this.rotate.active||a)&&this._recomputeTargetCenterForElevationChange){var c=this._targetCameraChangedByElevationUpdate;this._updateTargetCenterForElevation()&&(b=!0);this._targetCameraChangedByElevationUpdate=
c}!a&&this._recomputeTargetEyeForElevationChange&&this._updateTargetEyeForElevationChange()&&(b=!0);return b},step:function(){this._updateTargetCenterForElevationWhenIdle();this.inherited(arguments)},applyTiltConstraint:function(a){if(!this.constraintsEnabled)return!1;var b=!1,c=this._cameraElevationAngle(a,E),d=this.constraints.tilt.min(c.distance),e=this.constraints.tilt.max(c.distance),f=0;c.tilt>e?f=c.tilt-e:c.tilt<d&&(f=c.tilt-d);.01<Math.abs(f)&&(l.identity(p),l.rotate(p,-f,a.viewRight),g.subtract(a.center,
a.eye,h),l.multiplyVec3(p,h),g.subtract(a.center,h,a.eye),l.multiplyVec3(p,a.up),b=!0);this._autoUpdateTiltConstraint(e);return b},adjustTiltAfterZoom:function(a){return this.applyTiltConstraint(a)},applyConstraints:function(a,b,c){if(!this.constraintsEnabled)return!1;b=!1;c&&(b=this.applyTiltConstraint(a));g.subtract(a.center,a.eye,q);c=a.distance;var d=this.limitAltitude(c,a.center,q);c!==d&&(g.scale(q,-d/c),g.add(a.center,q,a.eye),b=!0);return b},limitTumbleByConstraints:function(a,b,c,d){if(!this.constraintsEnabled)return b;
var e=this.tiltConstraintsFromAltitudeConstraints(c,d);c=Math.max(this.constraints.tilt.min(d),e.min);d=Math.min(this.constraints.tilt.max(d),e.max);this._autoUpdateTiltConstraint(d);b=a+b;b>=d?b=Math.max(d,Math.min(b,a)):b<=c&&(b=Math.min(c,Math.max(b,a)));return b-a},_autoUpdateAltitudeConstraint:function(){var a=this._userConstraints&&this._userConstraints.altitude;a&&"auto"===a.mode&&a.autoUpdate(this.constraints.altitude.min(this),this.constraints.altitude.max(this))},_autoUpdateTiltConstraint:function(a){var b=
this._userConstraints&&this._userConstraints.tilt;void 0===a&&(a=this.constraints.tilt.max(this.cameras.target.distance));b&&"auto"===b.mode&&b.autoUpdate(n.rad2deg(a))},_disconnectUserConstraints:function(){if(this._userConstraints){this._userConstraintsHandles.forEach(function(a){a.remove()});this._userConstraints=null;this._userConstraintsHandles.length=0;var a=this.renderUnitInMeters;this.constraints.tilt=f.Tilt.scale(this.defaultConstraints.tilt,a);this.constraints.altitude=f.Altitude.scale(this.defaultConstraints.altitude,
a)}},_connectUserConstraints:function(a){a&&(this._userConstraints=a,this._userConstraintsHandles.push(m.init(a,"tilt.mode",this._tiltModeHandler),m.init(a,"clipDistance.mode",this._clipDistanceModeHandler),m.init(a,"altitude.mode",this._altitudeModeHandler),m.init(a,"collision.enabled",this._collisionEnabledHandler)))},_camerasChanged:function(){var a=this._targetCameraChangedByElevationUpdate;this.targetChanged();this._targetCameraChangedByElevationUpdate=a;this.currentChanged();this.currentHasReachedTarget()&&
this.currentReachedTarget()},_reapplyConstraints:function(a){var b=!1;this.applyConstraints(this.cameras.current,void 0,a)&&(b=!0);this.applyConstraints(this.cameras.target,void 0,a)&&(b=!0);b&&this._camerasChanged()},_userConstraintsChanged:function(){this._reapplyConstraints(!0)},_altitudeMinMaxHandler:function(a,b,c){this._userConstraintsChanged()},_tiltMaxHandler:function(a,b,c){this._userConstraintsChanged()},_tiltModeHandler:function(a){this._tiltHandles.forEach(function(a){a.remove()});this._tiltHandles.length=
0;"auto"===a?this.constraints.tilt=f.Tilt.scale(this.defaultConstraints.tilt,this.renderUnitInMeters):(this._tiltHandles.push(this._userConstraints.watch("tilt.max",this._tiltMaxHandler)),this.constraints.tilt=B(this._userConstraints));this._tiltMaxHandler()},_altitudeModeHandler:function(a){this._altitudeHandles.forEach(function(a){a.remove()});this._altitudeHandles.length=0;"auto"===a?(this.constraints.altitude=f.Altitude.scale(this.defaultConstraints.altitude,this.renderUnitInMeters),this._autoUpdateAltitudeConstraint()):
(this._altitudeHandles.push(this._userConstraints.watch("altitude.min",this._altitudeMinMaxHandler),this._userConstraints.watch("altitude.max",this._altitudeMinMaxHandler)),this.constraints.altitude=C(this._userConstraints));this._altitudeMinMaxHandler()},_collisionEnabledHandler:function(a,b,c){this.constraints.collision=new f.Collision(this._userConstraints.collision.enabled);this._userConstraintsChanged()},_clipDistanceNearFarHandler:function(a,b,c){"auto"!==this._userConstraints.clipDistance.mode&&
(this.cameras.target.near=this._userConstraints.clipDistance.near,this.cameras.target.far=this._userConstraints.clipDistance.far,this.cameras.current.near=this._userConstraints.clipDistance.near,this.cameras.current.far=this._userConstraints.clipDistance.far);this._camerasChanged()},_clipDistanceModeHandler:function(a){this._clipDistanceHandles.forEach(function(a){a.remove()});this._clipDistanceHandles.length=0;"auto"!==a&&this._clipDistanceHandles.push(this._userConstraints.watch(["clipDistance.near",
"clipDistance.far"],this._clipDistanceNearFarHandler));this._clipDistanceNearFarHandler()},_updateAutoNearFar:function(a){var b=this._userConstraints&&this._userConstraints.clipDistance;if(!b||"auto"===b.mode){var c=this.renderUnitInMeters,d=this.distanceToSilhouette(a,this.view.dataExtent,c,this._getTerrainElevationBelowCamera(a),F);a.far=d.distance/c;a.far/d.maxFarNearRatio>this.minNearDistance?a.near=a.far/d.maxFarNearRatio:(a.near=this.minNearDistance,a.far=a.near*d.maxFarNearRatio);b&&a===this.cameras.current&&
b.autoUpdate(a.near,a.far)}},constrainTargetEyeByElevation:function(){var a=!1,b=this.elevationProvider;b&&b.spatialReference&&(a=this.cameras.target,b=this._getTerrainElevationBelowCamera(a),a=this._applyElevationConstraint(a.eye,b,this.cameraElevationMargin));return a},constrainTargetEyeByElevationAndMoveLookAt:function(){g.set(this.cameras.target.eye,r);this.constrainTargetEyeByElevation()&&(g.subtract(r,this.cameras.target.eye),g.subtract(this.cameras.target.center,r))},targetChanged:function(a){this.inherited(arguments);
this._targetCameraChangedByElevationUpdate=!1;this._updateAutoNearFar(this.cameras.target);this.currentHasReachedTarget()&&this.currentReachedTarget()},currentChanged:function(){this._updateAutoNearFar(this.cameras.current);this.inherited(arguments)},_applyElevationConstraint:function(a,b,c){if(!this.constraintsEnabled)return!1;var d=this.renderCoordsHelper,e=d.getAltitude(a);return this.constraints.collision.enabled&&e-b<c?(d.setAltitude(b+c,a,0),!0):!1},_cameraElevationAngle:function(a,b){b=b||
{tilt:0,distance:0};b.tilt=this.renderCoordsHelper.viewAngle(a.center,a.eye);b.distance=a.distance;return b},_elevationChangeTileHandler:function(a){if(this.enableElevationUpdates&&this._targetCameraChangedByElevationUpdate&&this.constraintsEnabled){var b=!1,c=a.tile.extent;a=this.renderCoordsHelper.fromRenderCoords(this._targetCameraBeforeElevationUpdate.eye,D,a.spatialReference);c[0]<=a.x&&c[1]<=a.y&&c[2]>a.x&&c[3]>a.y&&(w.copyFrom(this.cameras.target),this.cameras.target.copyFrom(this._targetCameraBeforeElevationUpdate),
this.constrainTargetEyeByElevation(),this.applyConstraints(this.cameras.target),b=!w.equals(this.cameras.target));b&&(this.isAnimating?this.targetChanged():this.targetAnimatedChanged(!1,{internalUpdate:!0}),this._targetCameraChangedByElevationUpdate=!0)}},_elevationChangeHandler:function(a){var b=a.extent;a=a.spatialReference;var c=this.renderCoordsHelper.fromRenderCoords(this.cameras.target.eye,a);this._deferredUpdateTargetEyeForElevationChange(b,c,a);this._deferredUpdateTargetCenterForElevationChange(b,
c,a)},_isPositionWithinExtent:function(a,b){return b[0]<=a.x&&b[1]<=a.y&&b[2]>a.x&&b[3]>a.y},_deferredUpdateTargetEyeForElevationChange:function(a,b){this.enableElevationUpdates&&this.constraintsEnabled&&this._isPositionWithinExtent(b,a)&&(this.isAnimating?this._recomputeTargetEyeForElevationChange=!0:this._updateTargetEyeForElevationChange())},_updateTargetEyeForElevationChange:function(){this._recomputeTargetEyeForElevationChange=!1;var a=this.cameras.target;this._targetCameraChangedByElevationUpdate||
this._targetCameraBeforeElevationUpdate.copyFrom(a);var b=this._getTerrainElevationBelowCamera(a);if(a=this._applyElevationConstraint(a.eye,b,this.cameraElevationMargin))this.isAnimating?this.targetChanged():this.targetAnimatedChanged(!1,{internalUpdate:!0}),this._targetCameraChangedByElevationUpdate=!0;return a},_deferredUpdateTargetCenterForElevationChange:function(a,b,c){if(this.enableElevationUpdates&&!this._recomputeTargetCenterForElevationChange){var d=this.renderCoordsHelper.fromRenderCoords(this.cameras.target.center,
c);c=Math.max(d.y,b.y);var e=Math.min(d.y,b.y);b=v.intersectIntervals([[Math.min(d.x,b.x),Math.max(d.x,b.x)]],[[a[0],a[2]]]);a=v.intersectIntervals([[e,c]],[[a[1],a[3]]]);0<b.length&&0<a.length&&(this._recomputeTargetCenterForElevationChange=!0)}},_getTerrainElevationBelowCamera:function(a){var b=this.elevationProvider;return b&&b.spatialReference?(a=this.renderCoordsHelper.fromRenderCoords(a.eye,this.elevationProvider.spatialReference),this.elevationProvider.getElevation(a)||0):0},getCenterIntersectTerrain:function(a,
b,c){c||(c=g.create());g.set(b,c);var d=this.picker.pickAlongRay(a,c,null,null,null,!1,this._intersectTerrainSelector);this.picker.pickedIntersectionPoint(d,c)||this.getCenterIntersectManifold(a,b,c)||this.getFallbackCenterAlongViewDirection(a,b,c);return c},getCenterIntersectManifold:function(a,b,c){g.subtract(b,a,h);return this.intersectManifold(a,h,0,c)},intersectManifold:function(a,b,c,d){return this.renderCoordsHelper.intersectManifold(a,b,c,d)},getCameraIntersectTerrain:function(a,b,c,d){var e=
this.cameras.current.copy();a&&(e.eye=a);b&&(e.center=b);c&&(e.up=c);this.getCenterIntersectTerrain(e.eye,e.center,k);g.dist2(e.eye,k)<this.minPoiDist&&this.constraintsEnabled&&(a=this.constraints.collision.enabled,g.set(e.viewForward,h),g.scale(h,this.minPoiDist),a?g.subtract(k,h,e.eye):g.add(e.eye,h,k),b=this.renderCoordsHelper,c=b.getAltitude(e.eye),a&&c<this.cameraElevationMargin&&(g.subtract(k,e.eye,h),b.setAltitude(this.cameraElevationMargin,e.eye),g.add(e.eye,h,k)),e.markViewDirty());0<d?(a=
g.dist(e.eye,e.center),g.dist(k,e.center)>a*d&&(e.center=k)):e.center=k;return e}});f.UPDATE_TARGET_BY_ELEVATION_UPDATES_DEFAULT=!0;f.Tilt=function(a){this.min=a.min;this.max=a.max};f.Tilt.scale=function(a,b){return 1===b?a:new f.Tilt({min:function(c){return a.min(c*b)},max:function(c){return a.max(c*b)}})};f.Tilt.prototype.apply=function(a,b){return n.clamp(a,this.min(b),this.max(b))};f.Altitude=function(a){this.min=a.min;this.max=a.max};f.Altitude.scale=function(a,b){return 1===b?a:new f.Altitude({min:function(c){return a.min(c)/
b},max:function(c){return a.max(c)/b}})};f.Altitude.prototype.apply=function(a,b){return n.clamp(b,this.min(a),this.max(a))};f.Collision=function(a){this.enabled=null!=a?a:!0};return f});