// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.5/esri/copyright.txt for details.
//>>built
define("../mixins/ConstraintsMixin ../../support/mathUtils ../../support/earthUtils ../../lib/glMatrix ../../webgl-engine/lib/Util ../../constraints/SceneViewAltitudeConstraint ../../constraints/SceneViewTiltConstraint".split(" "),function(k,g,h,q,r,n,l){var f=q.vec3d,m=f.create(),p=f.create(),t=f.create();return k.createSubclass({declaredClass:"esri.views.3d.navigation.spherical.ConstraintsSpherical",defaultConstraints:{tilt:new k.Tilt({min:function(){return g.deg2rad(l.MAX_DEFAULT)},max:g.makePiecewiseLinearFunction([[4E3,
g.deg2rad(l.MIN_DEFAULT)],[5E4,g.deg2rad(88)],[6E6,g.deg2rad(88)],[2E7,g.deg2rad(l.MAX_DEFAULT)]])}),altitude:new k.Altitude({min:function(){return n.MIN_DEFAULT},max:function(){return n.MAX_DEFAULT}}),collision:new k.Collision},initialize:function(){this.captainNemoAltitudeThreshold=2E4;this.captainNemoElevationThreshold=-500},limitAltitude:function(a,e,c){f.scale(c,a/f.length(c),m);var b=f.subtract(e,m,m),d=this.renderCoordsHelper.getAltitude(b),g=this.constraints.altitude.apply(this,d);return 1E-6<
Math.abs(d-g)&&(b=d<g?e:b,c=d<g?f.scale(c,-1,t):c,r.raySphere(b,c,null,g+h.earthRadius,p))?f.dist(e,p):a},tiltConstraintsFromAltitudeConstraints:function(a,e){var c=this.constraints.altitude.min(),b=this.constraints.altitude.max();a=f.length2(a);var d=Math.sqrt(a),c=c+h.earthRadius,b=b+h.earthRadius,b=(b*b-e*e-a)/(2*d*e);e=Math.acos(g.clamp((c*c-e*e-a)/(2*d*e),-1,1));return{min:Math.acos(g.clamp(b,-1,1)),max:e}},distanceToSilhouette:function(a,e,c,b,d){d||(d={maxFarNearRatio:0,distance:0});a=f.dot(a.eye,
a.eye);e=h.earthRadius*h.earthRadius;d.maxFarNearRatio=this.maxFarNearRatio;this.isNemoMode(a,b)?(b=h.earthRadius+b,d.distance=Math.sqrt(a-b*b)):a>e?(d.maxFarNearRatio=g.clamp(2E4-(Math.log(Math.sqrt(a)-h.earthRadius)-7.983)/9.011*19E3,1E3,2E4),d.distance=Math.sqrt(a-e)):d.distance=this.maxFarNearRatio*this.minNearDistance;d.distance*=1.2;return d},isNemoMode:function(a,e){var c=h.earthRadius+this.captainNemoAltitudeThreshold;return a<c*c&&e<this.captainNemoElevationThreshold},getFallbackCenterAlongViewDirection:function(a,
e,c){var b=f.dot(a,a),d=h.earthRadius*h.earthRadius,b=b>d?Math.sqrt(b-d)/3:1;f.subtract(e,a,c);f.scale(c,b/f.length(c),c);f.add(c,a)}})});